// <auto-generated />
using System;
using BotanikBambu.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BotanikBambu.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BotanikBambu.Models.Bambu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("ProfilePhoto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.ToTable("Bambus");
                });

            modelBuilder.Entity("BotanikBambu.Models.Carts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BambuId")
                        .HasColumnType("int");

                    b.Property<string>("CoverPicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BambuId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("BotanikBambu.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Adana"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Adıyaman"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Afyonkarahisar"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ağrı"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Amasya"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ankara"
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Antalya"
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Artvin"
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Aydın"
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Balıkesir"
                        },
                        new
                        {
                            Id = 11,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bilecik"
                        },
                        new
                        {
                            Id = 12,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bingöl"
                        },
                        new
                        {
                            Id = 13,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bitlis"
                        },
                        new
                        {
                            Id = 14,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bolu"
                        },
                        new
                        {
                            Id = 15,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Burdur"
                        },
                        new
                        {
                            Id = 16,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bursa"
                        },
                        new
                        {
                            Id = 17,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Çanakkale"
                        },
                        new
                        {
                            Id = 18,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Çankırı"
                        },
                        new
                        {
                            Id = 19,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Çorum"
                        },
                        new
                        {
                            Id = 20,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Denizli"
                        },
                        new
                        {
                            Id = 21,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Diyarbakır"
                        },
                        new
                        {
                            Id = 22,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Edirne"
                        },
                        new
                        {
                            Id = 23,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Elazığ"
                        },
                        new
                        {
                            Id = 24,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Erzincan"
                        },
                        new
                        {
                            Id = 25,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Erzurum"
                        },
                        new
                        {
                            Id = 26,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Eskişehir"
                        },
                        new
                        {
                            Id = 27,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Gaziantep"
                        },
                        new
                        {
                            Id = 28,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Giresun"
                        },
                        new
                        {
                            Id = 29,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Gümüşhane"
                        },
                        new
                        {
                            Id = 30,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Hakkâri"
                        },
                        new
                        {
                            Id = 31,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Hatay"
                        },
                        new
                        {
                            Id = 32,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Isparta"
                        },
                        new
                        {
                            Id = 33,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Mersin"
                        },
                        new
                        {
                            Id = 34,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "İstanbul"
                        },
                        new
                        {
                            Id = 35,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "İzmir"
                        },
                        new
                        {
                            Id = 36,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kars"
                        },
                        new
                        {
                            Id = 37,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kastamonu"
                        },
                        new
                        {
                            Id = 38,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kayseri"
                        },
                        new
                        {
                            Id = 39,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kırklareli"
                        },
                        new
                        {
                            Id = 40,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kırşehir"
                        },
                        new
                        {
                            Id = 41,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kocaeli"
                        },
                        new
                        {
                            Id = 42,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Konya"
                        },
                        new
                        {
                            Id = 43,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kütahya"
                        },
                        new
                        {
                            Id = 44,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Malatya"
                        },
                        new
                        {
                            Id = 45,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Manisa"
                        },
                        new
                        {
                            Id = 46,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kahramanmaraş"
                        },
                        new
                        {
                            Id = 47,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Mardin"
                        },
                        new
                        {
                            Id = 48,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Muğla"
                        },
                        new
                        {
                            Id = 49,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Muş"
                        },
                        new
                        {
                            Id = 50,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Nevşehir"
                        },
                        new
                        {
                            Id = 51,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Niğde"
                        },
                        new
                        {
                            Id = 52,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ordu"
                        },
                        new
                        {
                            Id = 53,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Rize"
                        },
                        new
                        {
                            Id = 54,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sakarya"
                        },
                        new
                        {
                            Id = 55,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Samsun"
                        },
                        new
                        {
                            Id = 56,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Siirt"
                        },
                        new
                        {
                            Id = 57,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sinop"
                        },
                        new
                        {
                            Id = 58,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Sivas"
                        },
                        new
                        {
                            Id = 59,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Tekirdağ"
                        },
                        new
                        {
                            Id = 60,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Tokat"
                        },
                        new
                        {
                            Id = 61,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Trabzon"
                        },
                        new
                        {
                            Id = 62,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Tunceli"
                        },
                        new
                        {
                            Id = 63,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Şanlıurfa"
                        },
                        new
                        {
                            Id = 64,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Uşak"
                        },
                        new
                        {
                            Id = 65,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Van"
                        },
                        new
                        {
                            Id = 66,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Yozgat"
                        },
                        new
                        {
                            Id = 67,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Zonguldak"
                        },
                        new
                        {
                            Id = 68,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Aksaray"
                        },
                        new
                        {
                            Id = 69,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bayburt"
                        },
                        new
                        {
                            Id = 70,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Karaman"
                        },
                        new
                        {
                            Id = 71,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kırıkkale"
                        },
                        new
                        {
                            Id = 72,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Batman"
                        },
                        new
                        {
                            Id = 73,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Şırnak"
                        },
                        new
                        {
                            Id = 74,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Bartın"
                        },
                        new
                        {
                            Id = 75,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Ardahan"
                        },
                        new
                        {
                            Id = 76,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Iğdır"
                        },
                        new
                        {
                            Id = 77,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Yalova"
                        },
                        new
                        {
                            Id = 78,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Karabük"
                        },
                        new
                        {
                            Id = 79,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kilis"
                        },
                        new
                        {
                            Id = 80,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Osmaniye"
                        },
                        new
                        {
                            Id = 81,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Düzce"
                        });
                });

            modelBuilder.Entity("BotanikBambu.Models.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Hex")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("BotanikBambu.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Kadın"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Erkek"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Diğer"
                        });
                });

            modelBuilder.Entity("BotanikBambu.Models.Payment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Receipt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("BotanikBambu.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("BotanikBambu.Models.Trucker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("HexCode")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("TruckPlate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruckerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TruckerSurname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Truckers");
                });

            modelBuilder.Entity("BotanikBambu.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApplicationForm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facebook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("Gsm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifierId")
                        .HasColumnType("int");

                    b.Property<int?>("OwnerId")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Twitter")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("GenderId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BotanikBambu.Models.Bambu", b =>
                {
                    b.HasOne("BotanikBambu.Models.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.Navigation("Color");
                });

            modelBuilder.Entity("BotanikBambu.Models.Carts", b =>
                {
                    b.HasOne("BotanikBambu.Models.Bambu", null)
                        .WithMany("Carts")
                        .HasForeignKey("BambuId");
                });

            modelBuilder.Entity("BotanikBambu.Models.Payment", b =>
                {
                    b.HasOne("BotanikBambu.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BotanikBambu.Models.Photo", b =>
                {
                    b.HasOne("BotanikBambu.Models.Carts", "Cart")
                        .WithMany("Photos")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");
                });

            modelBuilder.Entity("BotanikBambu.Models.User", b =>
                {
                    b.HasOne("BotanikBambu.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BotanikBambu.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("BotanikBambu.Models.Bambu", b =>
                {
                    b.Navigation("Carts");
                });

            modelBuilder.Entity("BotanikBambu.Models.Carts", b =>
                {
                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
